<a onclick="loadPage('/gerencia')"
    class="bg-background cursor-pointer border border-border dark:bg-background-dark dark:border-border-dark hover:bg-gray-200 dark:hover:bg-gray-800 p-2 rounded-lg transition"><i
        class="fa-solid fa-chart-simple text-orange-600 px-2"></i>Dashboard</a>
<div
    class="mb-2 cursor-pointer dark:bg-background-dark rounded-lg transition border dark:border-border-dark border-border">
    <button
        class="dropdown-toggle w-full flex items-center hover:bg-gray-200 dark:hover:bg-gray-800 justify-between border-b dark:border-border-dark border-border px-4 py-2 text-left cursor-pointer dark:bg-background-dark rounded-lg transition-colors group"
        data-target="controle_financeiro_gerencia_sidebar-dropdown">
        <div class="flex items-center space-x-3">
            <i class="fa-solid fa-money-check text-green-600 w-4 h-4"></i>
            <span class="font-medium">Financeiro</span>
        </div>
        <svg class="dropdown-arrow w-4 h-4 transition-transform duration-200" fill="none" stroke="currentColor"
            viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
    </button>
    <div id="controle_financeiro_gerencia_sidebar-dropdown" class="dropdown-content hidden m-1 space-y-1">
        <a
            class="block p-2 hover:bg-gray-200 pl-4 dark:hover:bg-gray-800 cursor-pointer dark:bg-background-dark rounded-lg transition-colors">
            <i class="fa-solid fa-scroll text-green-600 mr-1"></i>
            Faturas
        </a>
    </div>
</div>
<a onclick="loadPage('/gerencia/contas')"
    class="cursor-pointer border border-border dark:bg-background-dark dark:border-border-dark hover:bg-gray-200 dark:hover:bg-gray-800 p-2 rounded-lg transition">
    <i class="fa-solid fa-user-tag text-blue-600 px-2"></i> Assinantes</a>
<div class="flex items-center my-6">
    <div class="flex-grow border-t border-border"></div>
    <span class="mx-4 text-gray-800 dark:text-gray-200 text-xs uppercase">Autenticação</span>
    <div class="flex-grow border-t border-border"></div>
</div>
<a id="gerencia_toggle_mode_sistema"
    class="bg-background cursor-pointer border border-border dark:bg-background-dark dark:border-border-dark hover:bg-gray-200 dark:hover:bg-gray-800 p-2 rounded-lg transition">
    <i class="fa-solid fa-circle-left text-orange-600 px-2"></i>
    Modo normal</a>
<a
    class="bg-background cursor-pointer border border-border dark:bg-background-dark dark:border-border-dark hover:bg-gray-200 dark:hover:bg-gray-800 p-2 rounded-lg transition"><i
        class="fa-solid fa-user text-purple-600 px-2"></i> Perfil</a>
<a onclick="logOut()"
    class="bg-background cursor-pointer border border-border dark:bg-background-dark dark:border-border-dark hover:bg-gray-200 dark:hover:bg-gray-800 p-2 rounded-lg transition"><i
        class="fa-solid fa-right-from-bracket text-red-600 px-2"></i> Sair</a>

<script>
    (() => {
        const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
        dropdownToggles.forEach(toggle => {
            toggle.addEventListener('click', (e) => {
                e.preventDefault();
                const targetId = toggle.getAttribute('data-target');
                const dropdown = document.getElementById(targetId);
                const arrow = toggle.querySelector('.dropdown-arrow');

                // Close other dropdowns
                document.querySelectorAll('.dropdown-content').forEach(content => {
                    if (content.id !== targetId && !content.classList.contains('hidden')) {
                        content.classList.add('hidden');
                        const otherArrow = document.querySelector(`[data-target="${content.id}"] .dropdown-arrow`);
                        if (otherArrow) {
                            otherArrow.classList.remove('rotate-90');
                        }
                    }
                });

                // Toggle current dropdown
                dropdown.classList.toggle('hidden');
                arrow.classList.toggle('rotate-90');
            });
        });


        sidebar.querySelectorAll("a").forEach((item) => {
            item.addEventListener("click", () => {
                if (window.innerWidth < 768) {
                    sidebar.classList.add("-translate-x-full");
                }
            });
        });

        function toggleModeGerencial() {
            $.ajax({
                url: "/api/usuarios/toggleModeGerencial",
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem("gestao_facil:token")
                },
                dataType: "json",
                success: function (response) {
                     window.location.href = "/";
                },
                error: function (xhr, status, error) {
                    const mensagem =
                        xhr.responseJSON?.message || "Erro inesperado na requisição";
                    showNotification(mensagem, "error");
                    if (status === 401) window.location.href = "/login";
                }
            });
        };

        document.getElementById("gerencia_toggle_mode_sistema").addEventListener("click", toggleModeGerencial);
    })()
</script>