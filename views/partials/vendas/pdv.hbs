<div
    class="flex flex-col xl:flex-row gap-4 xl:max-h-[calc(100vh-8rem)] border-border dark:border-border-dark bg-card dark:bg-card-dark shadow-md rounded-lg p-4 border">
    <!-- Área Principal - Produtos -->
    <div class="flex-1 flex flex-col">
        <!-- Header -->
        <div class="mb-6 flex flex-col gap-2">
            <h2 class="text-xl md:text-2xl font-bold text-black dark:text-white"><i
                    class="fa-solid fa-tags text-green-600"></i>
                Ponto de vendas
            </h2>
            <!-- Barra de Busca -->
            <div class="relative">
                <input type="text" id="searchProductosInput" placeholder="Buscar por nome ou código..."
                    class="w-full p-2 rounded-md border bg-background dark:bg-background-dark border-border dark:border-gray-500 outline-none">
            </div>
        </div>

        <!-- Grid de Produtos -->
        <div class="flex-1 overflow-y-auto scrollbar-thin">
            <div id="productsGrid" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-4 gap-4">
                <!-- Produtos serão carregados aqui -->
            </div>
        </div>
    </div>

    <!-- Carrinho Lateral -->
    <div
        class="overflow-auto border-border dark:border-border-dark bg-background dark:bg-background-dark shadow-md rounded-lg p-4 border flex flex-col">
        <!-- Header do Carrinho -->
        <div class="p-4 border-b border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between mb-4">
                <h2 class="text-xl font-semibold">
                    <i class="fas fa-shopping-cart text-green-600 mr-2"></i>
                    Carrinho
                </h2>
                <button id="clearCartBtn"
                    class="text-red-500 dark:text-red-300 bg-red-100 px-3 py-1 rounded-md bg-red-10 dark:bg-red-900"
                    title="Limpar carrinho">
                    <i class="fas fa-trash text-sm"></i>
                </button>
            </div>

            <!-- Seleção de Cliente -->
            <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-white mb-2">
                    Cliente
                    <a onclick="openModalClientes()" class="text-blue-500 px-2 cursor-pointer">Novo
                        cliente</a>
                </label>
                <select id="clientPdvVenda"
                    class="w-full p-2 rounded-md border bg-card dark:bg-card-dark border-border dark:border-border-dark">

                </select>
            </div>
        </div>

        <!-- Lista de Itens do Carrinho -->
        <div class="flex-1 min-h-48 overflow-y-auto scrollbar-thin p-4">
            <div id="cartItems">
                <div class="text-center text-gray-500 dark:text-gray-400 py-8">
                    <i class="fas fa-shopping-cart text-4xl mb-3 opacity-50"></i>
                    <p>Carrinho vazio</p>
                    <p class="text-sm">Adicione produtos para começar</p>
                </div>
            </div>
        </div>

        <!-- Footer do Carrinho -->
        <div class="p-4 border-border dark:border-border-dark bg-background dark:bg-background-dark rounded-lg">
            <!-- Desconto -->
            <div class="mb-4">
                <div class="flex items-center gap-2 mb-2">
                    <select id="discountType"
                        class="w-full p-2 rounded-md border bg-card dark:bg-card-dark border-border dark:border-border-dark">
                        <option value="percentage">Desconto %</option>
                        <option value="value">Desconto R$</option>
                    </select>
                    <input type="text" id="discountValue" placeholder="0,00"
                        class="w-full p-2 rounded-md border bg-card dark:bg-card-dark border-border dark:border-border-dark">
                </div>
            </div>

            <!-- Totais -->
            <div class="space-y-2 mb-4">
                <div class="flex justify-between text-sm">
                    <span>Subtotal:</span>
                    <span id="subtotal">R$ 0,00</span>
                </div>
                <div class="flex justify-between text-sm">
                    <span>Desconto:</span>
                    <span id="discount">R$ 0,00</span>
                </div>
                <div
                    class="flex justify-between text-lg font-semibold border-t border-border dark:border-border-dark pt-2">
                    <span>Total:</span>
                    <span id="total">R$ 0,00</span>
                </div>
            </div>

            <!-- Forma de Pagamento -->
            <div class="mb-4 flex flex-col gap-2">
                <label class="block text-sm font-medium text-gray-700 dark:text-white mb-2">Pagamento</label>
                <select id="paymentMethod"
                    class="w-full p-2 rounded-md border bg-card dark:bg-card-dark border-border dark:border-border-dark">
                    <option value="money">Dinheiro</option>
                    <option value="card">Cartão</option>
                    <option value="pix">PIX</option>
                </select>

                <!-- Campo de Troco (apenas para dinheiro) -->
                <div id="changeSection" class="space-y-2">
                    <input type="text" id="receivedAmount" placeholder="Valor recebido"
                        class="w-full p-2 rounded-md border bg-card dark:bg-card-dark border-border dark:border-border-dark">
                    <div class="flex justify-between text-sm font-medium">
                        <span>Troco:</span>
                        <span id="changeAmount">R$ 0,00</span>
                    </div>
                </div>
            </div>

            <!-- Botão Finalizar Venda -->
            <button id="finalizeSaleBtn"
                class="w-full bg-blue-500 dark:bg-blue-600 hover:bg-blue-600 text-white font-bold py-3 px-4 rounded-lg transition-colors disabled:bg-gray-400 dark:disabled:bg-gray-600 disabled:cursor-not-allowed"
                disabled>
                <i class="fas fa-check mr-2"></i>
                Finalizar Venda
            </button>
        </div>
    </div>
</div>

{{> clientes/modais/cadastro}}

<!-- Modal de Sucesso -->
<div id="successModal"
    class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 items-center justify-center min-h-screen">
    <div id="modalContent"
        class="bg-white dark:bg-gray-800 rounded-lg p-8 max-w-md w-full mx-4 text-center transform scale-90 opacity-0 transition duration-300 ease-out">
        <div
            class="w-16 h-16 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mx-auto mb-4">
            <i class="fas fa-check text-2xl text-green-600 dark:text-green-300"></i>
        </div>
        <h3 class="text-xl font-bold text-gray-800 dark:text-white mb-2">Venda Finalizada!</h3>
        <p class="text-gray-600 dark:text-gray-400 mb-6">A venda foi processada com sucesso.</p>
        <button id="newSaleBtn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-lg">
            Nova Venda
        </button>
    </div>
</div>



<script>
    switchToFullScreen();
    // Dados de exemplo dos produtos
    (() => {
        $(document).ready(function () {
            $('#searchProductosInput').focus();
        });
        $(document).keydown(function (e) {
            if (e.keyCode == 13) {
                $('#searchProductosInput').focus();
            }
        });

        $("#clientPdvVenda").select2({
            placeholder: 'Selecione um cliente',
            width: '100%',
            allowClear: true,
            language: "pt-BR",
            ajax: {
                url: '/api/clientes/select2/lista',
                dataType: 'json',
                delay: 250,
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('gestao_facil:token')}`
                },
                data: function (params) {
                    return {
                        search: params.term
                    }
                },
                processResults: function (data) {
                    return {
                        results: data.results
                    };
                }
            }
        });

        function sendVendaToBackend() {
            const cart = localStorage.getItem('gestao_facil:cartPDV');
            const cartItems = cart ? JSON.parse(cart) : [];

            if (cartItems.length === 0) {
                Swal.fire({
                    icon: "error",
                    title: "Erro!",
                    text: "Nenhum item adicionado ao carrinho.",
                    confirmButtonText: "Ok",
                });
                return;
            }

            let descontoTotal = 0;
            subtotalValue = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);

            const discountInput = $('#discountValue').val().replace(',', '.');
            const discountType = $('#discountType').val();

            if (discountInput && !isNaN(discountInput)) {
                if (discountType === 'percentage') {
                    descontoTotal = subtotalValue * (parseFloat(discountInput) / 100);
                } else {
                    descontoTotal = parseFloat(discountInput);
                }
            } else {
                descontoTotal = 0;
            }

            const data = {
                clienteId: $('#clientPdvVenda').val(),
                data: new Date().toISOString().split('T')[0],
                vendedorId: null,
                desconto: descontoTotal,
                garantia: "",
                observacoes: "Venda realizada via PDV",
                itens: cartItems.map(item => (
                    {
                        id: item.id,
                        quantidade: item.quantity,
                        preco: item.price
                    }
                ))
            };

            $.ajax({
                url: '/api/vendas/criar',
                method: 'POST',
                data: data,
                dataType: 'json',
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('gestao_facil:token')}`
                },
                success: function (data) {
                    showSuccessModal();
                    fetchProducts();
                    limparCarrinhoPDV();
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                    const mensagem =
                        xhr.responseJSON?.message || "Erro inesperado na requisição";
                    Swal.fire({
                        toast: true,
                        position: "bottom-end",
                        timer: 3000,
                        timerProgressBar: true,
                        showConfirmButton: false,
                        icon: "error",
                        title: "Erro!",
                        text: mensagem,
                    });
                }
            });
        }

        function showSuccessModal() {
            const modal = document.getElementById('successModal');
            const content = document.getElementById('modalContent');

            modal.classList.remove('hidden');
            modal.classList.add('flex');

            // Aguarda um frame para aplicar as classes de transição
            requestAnimationFrame(() => {
                content.classList.remove('opacity-0', 'scale-90');
                content.classList.add('opacity-100', 'scale-100');
            });
        }

        function hideSuccessModal() {
            const modal = document.getElementById('successModal');
            const content = document.getElementById('modalContent');

            content.classList.remove('opacity-100', 'scale-100');
            content.classList.add('opacity-0', 'scale-90');

            // Aguarda a animação terminar antes de esconder o modal
            setTimeout(() => {
                modal.classList.add('hidden');
                modal.classList.remove('flex');
            }, 300); // deve bater com `duration-300`
        }

        let products = [];
        let cart = JSON.parse(localStorage.getItem('gestao_facil:cartPDV')) || [];
        let subtotalValue = 0;
        let discountValue = 0;
        let totalValue = 0;

        $(document).ready(function () {
            fetchProducts();
            setupEventListeners();
            toggleChangeSection();
            renderCart();
            calculateTotals();
        });

        function fetchProducts(search = null) {
            $.ajax({
                url: '/api/produtos/lista/geral',
                method: 'GET',
                dataType: 'json',
                data: { search },
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('gestao_facil:token')}`
                },
                success: function (data) {
                    // Adaptar estrutura recebida
                    products = data.data.map(p => ({
                        id: p.id,
                        name: p.nome,
                        code: p.codigo || '',
                        price: parseFloat(p.preco),
                        stock: p.estoque,
                        image: '🛒' // opcional
                    }));
                    renderProducts(products);
                },
                error: function () {
                    alert('Erro ao buscar produtos');
                }
            });
        }


        // Renderizar produtos
        function renderProducts(productsToRender) {
            const grid = $('#productsGrid');
            grid.empty();

            if (productsToRender.length === 0) {
                grid.append(`
                    <div class="text-center col-span-6 flex items-center p-4 justify-center flex-col gap-2 text-gray-500 dark:text-gray-400">
                        <i class="fas fa-search text-4xl mr-2"></i>
                        Nenhum produto encontrado.
                    </div>
                `);
                return;
            }

            productsToRender.forEach(product => {
                const productCard = `
                    <div class="border border-gray-200 dark:border-border-dark bg-background dark:bg-background-dark shadow-md rounded-lg p-4 card-hover cursor-pointer product-card" 
                         data-product-id="${product.id}">
                        <div class="text-center mb-3">
                            <h3 class="text-gray-800 dark:text-white text-sm mb-1">${product.name}</h3>
                            <p class="text-gray-500 dark:text-gray-400 text-xs mb-2">Cód: ${product.code}</p>
                            <p class="text-lg font-bold text-green-600 dark:text-green-400">R$ ${product.price.toFixed(2).replace('.', ',')}</p>
                            <p class="text-xs text-gray-500 dark:text-gray-400">Estoque: ${product.stock}</p>
                        </div>
                        <button id="addToCartBtn${product.id}" class="w-full bg-blue-600 hover:bg-blue-700 text-white text-sm py-2 px-3 rounded-lg transition-colors">
                            <i class="fas fa-plus mr-1"></i>
                            Adicionar
                        </button>
                    </div>
                `;
                grid.append(productCard);
                $(`#addToCartBtn${product.id}`).click(() => {
                    addToCart(product.id);
                });
            });
        }

        // Configurar event listeners
        function setupEventListeners() {
            // Busca de produtos
            let searchTimeout;

            $('#searchProductosInput').on('input', function () {
                clearTimeout(searchTimeout);

                searchTimeout = setTimeout(() => {
                    const searchTerm = $(this).val().toLowerCase();

                    fetchProducts(searchTerm);
                }, 150);
            });
            // Limpar carrinho
            $('#clearCartBtn').on('click', limparCarrinhoPDV);

            // Método de pagamento
            $('#paymentMethod').on('change', toggleChangeSection);

            // Valor recebido
            $('#receivedAmount').on('input', calculateChange);

            // Desconto
            $('#discountValue').on('input', calculateTotals);
            $('#discountType').on('change', calculateTotals);

            // Finalizar venda
            $('#finalizeSaleBtn').on('click', finalizeSale);

            // Nova venda
            $('#newSaleBtn').on('click', newSale);
        }

        function addToCart(productId) {
            const product = products.find(p => p.id === productId);
            const existingItem = cart.find(item => item.id === productId);

            if (existingItem) {
                if (existingItem.quantity < product.stock) {
                    existingItem.quantity++;
                } else {
                    alert('Estoque insuficiente!');
                    return;
                }
            } else {
                cart.push({
                    id: product.id,
                    name: product.name,
                    price: product.price,
                    quantity: 1,
                    stock: product.stock
                });
            }

            saveCart();
            renderCart();
            calculateTotals();
        }

        // Remover do carrinho
        function removeFromCart(productId) {
            cart = cart.filter(item => item.id !== productId);
            saveCart();
            renderCart();
            calculateTotals();
        }

        function updateQuantity(productId, newQuantity) {
            const item = cart.find(item => item.id === productId);
            if (item) {
                if (newQuantity <= 0) {
                    removeFromCart(productId);
                } else if (newQuantity <= item.stock) {
                    item.quantity = newQuantity;
                    saveCart();
                    renderCart();
                    calculateTotals();
                } else {
                    alert('Estoque insuficiente!');
                }
            }
        }


        // Renderizar carrinho
        function renderCart() {
            const cartContainer = $('#cartItems');
            cartContainer.empty();
            if (cart.length === 0) {
                cartContainer.html(`
                    <div class="text-center text-gray-500 py-8">
                        <i class="fas fa-shopping-cart text-4xl mb-3 opacity-50"></i>
                        <p>Carrinho vazio</p>
                        <p class="text-sm">Adicione produtos para começar</p>
                    </div>
                `);
                $('#finalizeSaleBtn').prop('disabled', true);
                return;
            }

            cart.forEach(item => {
                const cartHtml = `
                    <div class="border-border dark:border-border-dark bg-card dark:bg-card-dark shadow-md rounded-lg p-3 mb-3">
                        <div class="flex justify-between items-start mb-2">
                            <h4 class="font-medium text-sm text-gray-800 dark:text-white">${item.name}</h4>
                            <button type="button" id="removeFromCartBtn${item.id}" class="text-red-500 hover:text-red-700 text-sm">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-2">
                                <button type="button" id="decreaseQuantityBtn${item.id}" class="w-6 h-6 bg-gray-300 dark:bg-gray-900 rounded text-xs">-</button>
                                <span class="text-sm font-medium">${item.quantity}</span>
                                <button type="button" id="increaseQuantityBtn${item.id}" class="w-6 h-6 bg-gray-300 dark:bg-gray-900 rounded text-xs">+</button>
                            </div>
                            <div class="text-right">
                                <p class="text-xs text-gray-500">R$ ${item.price.toFixed(2).replace('.', ',')}</p>
                                <p class="font-bold text-sm">R$ ${(item.price * item.quantity).toFixed(2).replace('.', ',')}</p>
                            </div>
                        </div>
                    </div>
                `;
                cartContainer.append(cartHtml);

                $(`#decreaseQuantityBtn${item.id}`).on('click', () => updateQuantity(item.id, item.quantity - 1));
                $(`#increaseQuantityBtn${item.id}`).on('click', () => updateQuantity(item.id, item.quantity + 1));
                $(`#removeFromCartBtn${item.id}`).on('click', () => removeFromCart(item.id));
            });

            $('#finalizeSaleBtn').prop('disabled', false);
        }

        // Calcular totais
        function calculateTotals() {
            subtotalValue = cart.reduce((total, item) => total + (item.price * item.quantity), 0);

            const discountInput = $('#discountValue').val().replace(',', '.');
            const discountType = $('#discountType').val();

            if (discountInput && !isNaN(discountInput)) {
                if (discountType === 'percentage') {
                    discountValue = subtotalValue * (parseFloat(discountInput) / 100);
                } else {
                    discountValue = parseFloat(discountInput);
                }
            } else {
                discountValue = 0;
            }

            totalValue = subtotalValue - discountValue;
            if (totalValue < 0) totalValue = 0;

            $('#subtotal').text(`R$ ${subtotalValue.toFixed(2).replace('.', ',')}`);
            $('#discount').text(`R$ ${discountValue.toFixed(2).replace('.', ',')}`);
            $('#total').text(`R$ ${totalValue.toFixed(2).replace('.', ',')}`);

            calculateChange();
        }

        // Mostrar/ocultar seção de troco
        function toggleChangeSection() {
            const paymentMethod = $('#paymentMethod').val();
            if (paymentMethod === 'money') {
                $('#changeSection').show();
            } else {
                $('#changeSection').hide();
                $('#changeAmount').text('R$ 0,00');
            }
        }

        // Calcular troco
        function calculateChange() {
            if ($('#paymentMethod').val() !== 'money') return;

            const receivedAmount = parseFloat($('#receivedAmount').val().replace(',', '.')) || 0;
            const change = receivedAmount - totalValue;

            $('#changeAmount').text(`R$ ${Math.max(0, change).toFixed(2).replace('.', ',')}`);
        }

        // Limpar carrinho
        function limparCarrinhoPDV() {
            cart = [];
            saveCart();
            renderCart();
            calculateTotals();
        }
        function saveCart() {
            localStorage.setItem('gestao_facil:cartPDV', JSON.stringify(cart));
        }
        // Finalizar venda
        function finalizeSale() {
            if (cart.length === 0) {
                alert('Carrinho vazio!');
                return;
            }

            const paymentMethod = $('#paymentMethod').val();
            if (paymentMethod === 'money') {
                const receivedAmount = parseFloat($('#receivedAmount').val().replace(',', '.')) || 0;
                if (receivedAmount < totalValue) {
                    alert('Valor recebido insuficiente!');
                    return;
                }
            }

            sendVendaToBackend();
        }

        // Nova venda
        function newSale() {
            limparCarrinhoPDV();
            $('#clientPdvVenda').val('');
            $('#discountValue').val('');
            $('#receivedAmount').val('');
            $('#paymentMethod').val('money');
            toggleChangeSection();
            hideSuccessModal();
        }

        // Máscaras para campos monetários
        // $('#discountValue, #receivedAmount').on('input', function () {
        //     let value = $(this).val().replace(/\D/g, '');
        //     value = (value / 100).toFixed(2).replace('.', ',');
        //     $(this).val(value);
        // });
        MaskToInputMoney(document.getElementById('receivedAmount'));
        MaskToInputMoney(document.getElementById('discountValue'));
    })();
</script>