<div>
  <div class="flex flex-col md:flex-row gap-2 justify-between mb-4">
    <h2 class="text-2xl font-bold text-black dark:text-white"><i class="fa-solid fa-tags text-green-600"></i>
      Vendas
    </h2>
    <div class="justify-between gap-2 items-center hidden md:flex">
      <button onclick="openModalFiltroVendas()"
        class="border-2 border-blue-500 hover:border-blue-700 text-blue-900 dark:text-blue-200 bg-blue-500/20 px-3 py-1.5 text-sm rounded-lg">
        <i class="fa-solid fa-filter"></i>
      </button>
      <button onclick="loadPage('vendas/formulario')"
        class="bg-secondary hover:bg-secondary-dark text-white px-3 py-1.5 text-sm rounded-md">
        <i class="fa-solid fa-circle-plus"></i> <span class="hidden md:inline">Nova Venda</span>
      </button>
      <button onclick="loadPage('vendas/pdv')"
        class="border-2 border-secondary hover:border-secondary-dark px-3 py-1.5 text-sm rounded-lg">
        <i class="fa-solid fa-cart-arrow-down"></i> PDV
      </button>
    </div>
  </div>
  <div
    class="overflow-x-auto hidden md:block shadow rounded-lg border bg-background dark:bg-background-dark border-gray-200 px-2 dark:border-gray-700">
    {{> vendas/tabela}}
  </div>
  <div class="overflow-x-auto block md:hidden rounded-lg">{{> vendas/mobile}}</div>
</div>
{{> vendas/modais/filtro}}
{{> vendas/modais/efetivar}}
<script>
  async function gerarCupomPorVendaId(vendaId) {
    try {
      const resp = await fetch(`/vendas/cupom-pdf/${vendaId}`, {
        headers: {
          Authorization: `Bearer ${localStorage.getItem("gestao_facil:token")}`,
        },
      });

      if (window.innerWidth < 768) {
        const blob = await resp.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.href = url;
        a.download = `cupom_${vendaId}_${new Date().toLocaleDateString()}.pdf`;
        document.body.appendChild(a);
        a.click();
        a.remove();
      } else {
        const blob = await resp.blob();
        const url = window.URL.createObjectURL(blob);
        window.open(url, "_blank");
      }
    } catch (err) {
      console.error("Erro ao gerar o cupom:", err);
      showNotification("Erro ao gerar o cupom.", "error");
    }
  }

  function visualizarVenda(id) {
    localStorage.setItem("vendaId", id);
    loadPage("/vendas/detalhe");
  }

  function estornarVenda(id) {
    Swal.fire({
      title: "Estornar venda",
      text: "Tem certeza que deseja estornar esta venda?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      confirmButtonText: "Sim, estornar!",
      cancelButtonText: "Cancelar",
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          dataType: "json",
          type: "GET",
          url: `/vendas/estornar/${id}`,
          beforeSend: function (xhr) {
            const tokenJWT = localStorage.getItem("gestao_facil:token");
            if (tokenJWT) {
              xhr.setRequestHeader("Authorization", `Bearer ${tokenJWT}`);
            }
            Swal.fire({
              title: "Carregando...",
              allowOutsideClick: false,
              allowEscapeKey: false,
              showConfirmButton: false,
              didOpen: () => {
                Swal.showLoading();
              },
            });
          },
          success: function (response) {
            Swal.close();
            showNotification("Venda estornada com sucesso!", "success");

            if (typeof reloadTabelaVendas === "function") {
              reloadTabelaVendas();
            }
            if (typeof renderListaVendas === "function") {
              renderListaVendas();
            }
          },
          error: function (error) {
            console.log(error);
            Swal.close();
            showNotification(
              error.responseJSON?.message || "Ocorreu um erro ao estornar a venda. Por favor, tente novamente.",
              "error"
            );
          },
        });
      }
    });
  }
  function excluirVenda(id, retornar = false) {
    Swal.fire({
      title: "Excluir venda",
      text: "Tem certeza que deseja excluir esta venda?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Sim, excluir!",
      cancelButtonText: "Cancelar",
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          dataType: "json",
          type: "DELETE",
          url: `/vendas/${id}`,
          beforeSend: function (xhr) {
            const tokenJWT = localStorage.getItem("gestao_facil:token");
            if (tokenJWT) {
              xhr.setRequestHeader("Authorization", `Bearer ${tokenJWT}`);
            }
            Swal.fire({
              title: "Carregando...",
              allowOutsideClick: false,
              allowEscapeKey: false,
              showConfirmButton: false,
              didOpen: () => {
                Swal.showLoading();
              },
            });
          },
          success: function (response) {
            Swal.close();
            showNotification("Venda exclu√≠da com sucesso!", "success");
            if (!retornar) {
              if (typeof reloadTabelaVendas === "function") {
                reloadTabelaVendas();
              }
              if (typeof renderListaVendas === "function") {
                renderListaVendas();
              }
            } else {
              loadPage('/vendas/resumo');
            }
          },
          error: function (error) {
            console.log(error);
            Swal.close();
            showNotification(error.responseJSON?.message || "Ocorreu um erro ao excluir a venda. Por favor, tente novamente.", "error");
          },
        });
      }
    });
  }
</script>